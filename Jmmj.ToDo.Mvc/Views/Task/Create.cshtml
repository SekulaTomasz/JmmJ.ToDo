@model JmmJ.ToDo.Service.Dto.NewTaskDto;
@using JmmJ.ToDo.Core.Enum;

@{
	ViewData["Title"] = "Create";
}


<div class="card">
	<div class="card-header">
		<h2>Create new task</h2>
		@if (ViewBag.errors != null)
		{
			@foreach (var i in ViewBag.errors)
			{
				<div class="alert alert-danger" role="alert">
					@i
				</div>
			}
		}
	</div>
	<div class="card-body">
		<form action="Create" method="post">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				@Html.LabelFor(x => x.Title)
				@Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
				<span asp-validation-for="Title" class="text-danger"></span>
			</div>
			<div class="form-group">
				@Html.LabelFor(x => x.Description)
				@Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				@Html.Label("Expected end date")
				@Html.TextBoxFor(x => x.ExpectedEndDate, new { @class = "form-control", id = "datepicker" })
				<span asp-validation-for="ExpectedEndDate" class="text-danger"></span>
			</div>
			<div class="form-group">
				@Html.LabelFor(x => x.Status)
				<select asp-for="Status" asp-items="Html.GetEnumSelectList<Status>()" class="form-control"></select>
				<span asp-validation-for="Status" class="text-danger"></span>
			</div>
			<div class="form-group">
				@Html.LabelFor(x => x.Priority)
				<select asp-for="Priority" asp-items="Html.GetEnumSelectList<Priority>()" class="form-control"></select>
				<span asp-validation-for="Priority" class="text-danger"></span>
			</div>
			<div class="form-group">
				<a href="../task" class="btn btn-danger" role="button" aria-pressed="true">Return</a>
				<button type="submit" class="btn btn-primary">Save</button>
			</div>
		</form>
	</div>
</div>

